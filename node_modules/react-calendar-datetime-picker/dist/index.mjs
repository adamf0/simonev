import e, { useState as t, useRef as n, useEffect as a, createContext as r, useContext as o, useMemo as i, forwardRef as l, Fragment as s, useLayoutEffect as d } from "react";
import { jsx as m, jsxs as c } from "react/jsx-runtime";
const h = (e2) => e2 < 10 ? `0${e2}` : e2;
function u(e2) {
  return e2 && e2.__esModule && Object.prototype.hasOwnProperty.call(e2, "default") ? e2.default : e2;
}
var y, f;
const g = u(function() {
  if (f) return y;
  f = 1;
  var e2 = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];
  function t2(e3, t3, n3) {
    return s2(o2(e3, t3, n3));
  }
  function n2(t3) {
    return 0 === function(t4) {
      var n3, a3, r3, o3, i3, l3 = e2.length, s3 = e2[0];
      if (t4 < s3 || t4 >= e2[l3 - 1]) throw new Error("Invalid Jalaali year " + t4);
      for (i3 = 1; i3 < l3 && (a3 = (n3 = e2[i3]) - s3, !(t4 < n3)); i3 += 1) s3 = n3;
      o3 = t4 - s3, a3 - o3 < 6 && (o3 = o3 - a3 + 33 * m2(a3 + 4, 33));
      -1 === (r3 = c2(c2(o3 + 1, 33) - 1, 4)) && (r3 = 4);
      return r3;
    }(t3);
  }
  function a2(e3, t3) {
    return t3 <= 6 ? 31 : t3 <= 11 || n2(e3) ? 30 : 29;
  }
  function r2(t3, n3) {
    var a3, r3, o3, i3, l3, s3, d3 = e2.length, h2 = t3 + 621, u2 = -14, y2 = e2[0];
    if (t3 < y2 || t3 >= e2[d3 - 1]) throw new Error("Invalid Jalaali year " + t3);
    for (s3 = 1; s3 < d3 && (r3 = (a3 = e2[s3]) - y2, !(t3 < a3)); s3 += 1) u2 = u2 + 8 * m2(r3, 33) + m2(c2(r3, 33), 4), y2 = a3;
    return u2 = u2 + 8 * m2(l3 = t3 - y2, 33) + m2(c2(l3, 33) + 3, 4), 4 === c2(r3, 33) && r3 - l3 == 4 && (u2 += 1), i3 = 20 + u2 - (m2(h2, 4) - m2(3 * (m2(h2, 100) + 1), 4) - 150), n3 ? { gy: h2, march: i3 } : (r3 - l3 < 6 && (l3 = l3 - r3 + 33 * m2(r3 + 4, 33)), -1 === (o3 = c2(c2(l3 + 1, 33) - 1, 4)) && (o3 = 4), { leap: o3, gy: h2, march: i3 });
  }
  function o2(e3, t3, n3) {
    var a3 = r2(e3, true);
    return l2(a3.gy, 3, a3.march) + 31 * (t3 - 1) - m2(t3, 7) * (t3 - 7) + n3 - 1;
  }
  function i2(e3) {
    var t3, n3 = s2(e3).gy, a3 = n3 - 621, o3 = r2(a3, false);
    if ((t3 = e3 - l2(n3, 3, o3.march)) >= 0) {
      if (t3 <= 185) return { jy: a3, jm: 1 + m2(t3, 31), jd: c2(t3, 31) + 1 };
      t3 -= 186;
    } else a3 -= 1, t3 += 179, 1 === o3.leap && (t3 += 1);
    return { jy: a3, jm: 7 + m2(t3, 30), jd: c2(t3, 30) + 1 };
  }
  function l2(e3, t3, n3) {
    var a3 = m2(1461 * (e3 + m2(t3 - 8, 6) + 100100), 4) + m2(153 * c2(t3 + 9, 12) + 2, 5) + n3 - 34840408;
    return a3 = a3 - m2(3 * m2(e3 + 100100 + m2(t3 - 8, 6), 100), 4) + 752;
  }
  function s2(e3) {
    var t3, n3, a3, r3;
    return t3 = (t3 = 4 * e3 + 139361631) + 4 * m2(3 * m2(4 * e3 + 183187720, 146097), 4) - 3908, n3 = 5 * m2(c2(t3, 1461), 4) + 308, a3 = m2(c2(n3, 153), 5) + 1, r3 = c2(m2(n3, 153), 12) + 1, { gy: m2(t3, 1461) - 100100 + m2(8 - r3, 6), gm: r3, gd: a3 };
  }
  function d2(e3, n3, a3, r3, o3, i3, l3) {
    var s3 = t2(e3, n3, a3);
    return new Date(s3.gy, s3.gm - 1, s3.gd, r3 || 0, o3 || 0, i3 || 0, l3 || 0);
  }
  function m2(e3, t3) {
    return ~~(e3 / t3);
  }
  function c2(e3, t3) {
    return e3 - ~~(e3 / t3) * t3;
  }
  return y = { toJalaali: function(e3, t3, n3) {
    "[object Date]" === Object.prototype.toString.call(e3) && (n3 = e3.getDate(), t3 = e3.getMonth() + 1, e3 = e3.getFullYear());
    return i2(l2(e3, t3, n3));
  }, toGregorian: t2, isValidJalaaliDate: function(e3, t3, n3) {
    return e3 >= -61 && e3 <= 3177 && t3 >= 1 && t3 <= 12 && n3 >= 1 && n3 <= a2(e3, t3);
  }, isLeapJalaaliYear: n2, jalaaliMonthLength: a2, jalCal: r2, j2d: o2, d2j: i2, g2d: l2, d2g: s2, jalaaliToDateObject: d2, jalaaliWeek: function(e3, t3, n3) {
    var a3 = d2(e3, t3, n3).getDay(), r3 = 6 == a3 ? 0 : -(a3 + 1), l3 = 6 + r3;
    return { saturday: i2(o2(e3, t3, n3 + r3)), friday: i2(o2(e3, t3, n3 + l3)) };
  } };
}()), p = (e2, t2 = "/") => {
  if (e2) {
    const n2 = g.toGregorian(e2 == null ? void 0 : e2.year, e2 == null ? void 0 : e2.month, e2 == null ? void 0 : e2.day);
    let a2 = n2.gy + t2 + h(n2.gm) + t2 + h(n2.gd);
    return void 0 !== e2.hour && void 0 !== e2.minute && (a2 = a2 + " " + h(e2.hour) + ":" + h(e2.minute)), a2;
  }
  return "";
}, C = (e2, t2 = "/") => {
  if (e2) {
    const n2 = new Date(e2.year, e2.month - 1, e2.day), a2 = g.toJalaali(n2);
    let r2 = a2.jy + t2 + h(a2.jm) + t2 + h(a2.jd);
    return void 0 !== e2.hour && void 0 !== e2.minute && (r2 = r2 + " " + h(e2.hour) + ":" + h(e2.minute)), r2;
  }
  return "";
}, b = (e2, t2) => void 0 !== e2 ? e2 : t2, D = (e2) => {
  if (!e2) return "";
  return String(e2).replace(/\d/g, (e3) => "۰۱۲۳۴۵۶۷۸۹"[e3]);
}, v = (e2, t2) => {
  const n2 = new Date(e2.year, e2.month, e2.day), a2 = new Date(t2.year, t2.month, t2.day);
  return n2 > a2 ? 1 : n2 < a2 ? 2 : 0;
}, w = (e2, t2) => {
  const n2 = g.j2d(e2.year, e2.month + 1, e2.day), a2 = g.j2d(t2.year, t2.month + 1, t2.day);
  return n2 > a2 ? 1 : n2 < a2 ? 2 : 0;
}, S = (e2, t2, n2) => `${e2}${h(t2)}${h(n2)}`, L = (e2, t2 = false, n2, a2, r2) => e2 ? a2 && n2 && r2 ? `${e2.year}/${h(e2.month + (t2 ? 1 : 0))}/${h(e2.day)} ${h(r2.hour)}:${h(r2.minute)}` : `${e2.year}/${h(e2.month + (t2 ? 1 : 0))}/${h(e2.day)}` : "", M = (e2, t2, n2, a2, r2, o2) => {
  const i2 = { en: v, fa: w };
  if ("en" !== t2 && "fa" !== t2) throw Error('Local must be "en" or "fa".');
  if ("single" !== n2 && "range" !== n2 && "multi" !== n2) throw Error('Type must be "single" or "range" or "multi".');
  if (a2 && r2 && 1 !== i2[t2](a2, r2)) throw Error("Max date must be greater than min date.");
  if ("single" === n2 && e2 && !("year" in e2 && "month" in e2 && "day" in e2) || "null" === e2 || "undefined" === e2) throw Error('Default date in single type must contain at least "year", "month", "day" or null.');
  if ("range" === n2 && e2 && (!("to" in e2) || !("from" in e2))) throw Error('Default date in range type must contain "from" and "To" object.');
  if ("range" === n2 && e2 && e2.from && e2.to && 2 === i2[t2](e2.to, e2.from)) throw Error('Default "To" date must be grater than default "from" date.');
  if ("multi" === n2 && e2) {
    if (e2.find((e3) => !("year" in e3) || !("month" in e3) || !("day" in e3))) throw Error("Default date in multi type must be a list of dates");
  }
  if (a2 && e2) {
    if ("single" === n2) {
      if (2 === i2[t2](a2, e2)) throw Error("Max date must be greater than default or selected date.");
    } else if ("range" === n2 && e2.to) {
      if (2 === i2[t2](a2, e2.to)) throw Error("Max date must be greater than default or selected to date.");
    } else if ("multi" === n2 && e2.length) {
      if (e2.find((e3) => 2 === i2[t2](a2, e3))) throw Error("Max date must be greater than default or selected to date.");
    }
  }
  if (r2 && e2) {
    if ("single" === n2) {
      if (1 === i2[t2](r2, e2)) throw Error("Default or selected date must be greater than min date.");
    } else if ("range" === n2 && e2.from) {
      if (1 === i2[t2](r2, e2.from)) throw Error("Default or selected date must be greater than min date.");
    } else if ("multi" === n2 && e2.length) {
      if (e2.find((e3) => 1 === i2[t2](r2, e3))) throw Error("Default or selected date must be greater than min date.");
    }
  }
  if (o2) {
    if ("single" === n2 && e2 && (o2 == null ? void 0 : o2.find((t3) => S(t3.year, t3.month, t3.day) === S(e2.year, e2.month, e2.day)))) throw Error("Default Date could not be in disabled list");
    if ("range" === n2 && e2 && (o2 == null ? void 0 : o2.find((t3) => S(t3.year, t3.month, t3.day) === S(e2.from.year, e2.from.month, e2.from.day) || S(t3.year, t3.month, t3.day) === S(e2.to.year, e2.to.month, e2.to.day)))) throw Error('"FROM" or "TO" in Default Date could not be in disabled list.');
    if ("multi" === n2 && (o2 == null ? void 0 : o2.find((t3) => e2 == null ? void 0 : e2.find((e3) => S(t3.year, t3.month, t3.day) === S(e3.year, e3.month, e3.day))))) throw Error("Non of Date in Default Date could not be in disabled list.");
  }
}, k = (e2, t2, n2, a2, r2, o2) => {
  var _a, _b, _c, _d, _e, _f;
  let i2 = null;
  "single" === t2 && (n2 == null ? void 0 : n2.year) && (i2 = o2 ? { ...n2, month: (n2 == null ? void 0 : n2.month) + 1, ...a2 } : { ...n2, month: (n2 == null ? void 0 : n2.month) + 1 }), "range" === t2 ? n2 && ((_a = n2.from) == null ? void 0 : _a.year) && ((_b = n2.to) == null ? void 0 : _b.year) && (i2 = o2 ? { from: { ...n2.from, month: ((_c = n2.from) == null ? void 0 : _c.month) + 1, ...a2.from }, to: { ...n2.to, month: ((_d = n2.to) == null ? void 0 : _d.month) + 1, ...a2.to } } : { from: { ...n2.from, month: ((_e = n2.from) == null ? void 0 : _e.month) + 1 }, to: { ...n2.to, month: ((_f = n2.to) == null ? void 0 : _f.month) + 1 } }) : "multi" === t2 && n2 && (i2 = n2.map((e3) => ({ ...e3, month: e3.month + 1 }))), e2 && e2(i2 || n2), r2 && ("range" === t2 ? n2 && n2.from && n2.to ? r2(i2) : r2(null) : r2(i2));
}, T = (e2, t2, n2, a2, r2) => {
  var _a, _b, _c, _d, _e;
  let o2, i2, l2 = /* @__PURE__ */ new Date(), s2 = g.toJalaali(l2);
  const d2 = { en: v, fa: w };
  return a2 && ("fa" === n2 && a2 && 2 === d2[n2](a2, { year: s2.jy, month: s2.jm, day: s2.jd }) ? s2 = { jy: a2.year, jm: a2.month + 1, jd: a2.day } : "en" === n2 && 2 === d2[n2](a2, { year: l2.getFullYear(), month: l2.getMonth(), day: l2.getDate() }) && (l2 = new Date(a2.year, a2.month, a2.day))), r2 && ("fa" === n2 && a2 && 1 === d2[n2](r2, { year: s2.jy, month: s2.jm, day: s2.jd }) ? s2 = { jy: r2.year, jm: r2.month + 1, jd: r2.day } : "en" === n2 && 1 === d2[n2](r2, { year: l2.getFullYear(), month: l2.getMonth(), day: l2.getDate() }) && (l2 = new Date(r2.year, r2.month, r2.day))), "single" === t2 && ((e2 == null ? void 0 : e2.year) && (i2 = { year: e2.year, month: e2.month, day: e2.day }), o2 = { hour: b(e2 == null ? void 0 : e2.hour, l2.getHours()), minute: b(e2 == null ? void 0 : e2.minute, l2.getMinutes()) }), "range" === t2 && ((e2 == null ? void 0 : e2.from) && (i2 = { year: e2.from.year, month: e2.from.month, day: e2.from.day }), o2 = { from: { hour: b((_a = e2 == null ? void 0 : e2.from) == null ? void 0 : _a.hour, l2.getHours()), minute: b((_b = e2 == null ? void 0 : e2.from) == null ? void 0 : _b.minute, l2.getMinutes()) }, to: { hour: b((_c = e2 == null ? void 0 : e2.to) == null ? void 0 : _c.hour, l2.getHours()), minute: b((_d = e2 == null ? void 0 : e2.to) == null ? void 0 : _d.minute, l2.getMinutes()) } }), "multi" === t2 && e2 && e2.length && ((_e = e2[e2.length - 1]) == null ? void 0 : _e.year) && (i2 = { year: e2[e2.length - 1].year, month: e2[e2.length - 1].month, day: e2[e2.length - 1].day }), i2 || (i2 = "fa" === n2 ? { year: s2.jy, month: s2.jm - 1, day: s2.jd } : { year: l2.getFullYear(), month: l2.getMonth(), day: l2.getDate() }), { initCalender: i2, initTime: o2 };
}, N = (e2, t2) => {
  const r2 = n(false);
  a(() => {
    r2.current ? e2() : r2.current = true;
  }, t2);
}, B = /* @__PURE__ */ new Date(), x = g.toJalaali(B), E = { fa: { NUMBERS: ["۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹"], WEEK_DAY_SHORT: ["ی", "د", "س", "چ", "پ", "ج", "ش"], MONTHS: ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"], WEEK_DAYS: [{ name: "شنبه", short: "ش" }, { name: "یکشنبه", short: "ی" }, { name: "دوشنبه", short: "د" }, { name: "سه شنبه", short: "س" }, { name: "چهارشنبه", short: "چ" }, { name: "پنجشنبه", short: "پ" }, { name: "جمعه", short: "ج", isWeekend: true }], YEARS_RANGE_START: x.jy - 100, YEARS_RANGE_END: x.jy + 100, getDay: (e2) => {
  const t2 = g.toGregorian(e2.year, e2.month + 1, e2.day);
  return new Date(t2.gy, t2.gm - 1, t2.gd).getDay();
}, todayObject: () => {
  const e2 = g.toJalaali(/* @__PURE__ */ new Date());
  return { year: e2.jy, month: e2.jm - 1, day: e2.jd };
}, getDayOfMonth: (e2) => g.jalaaliMonthLength(e2.year, e2.month + 1), inputPlaceholder: "انتخاب کنید", clockFromLB: "از ساعت", clockToLB: "تا ساعت", nextMonthBtnTL: "ماه بعد", previousMonthBtnTL: "ماه قبل", fromLB: "از", toLB: "تا", clockLB: "ساعت", todayBtnTL: "امروز" }, en: { WEEK_DAY: ["Sunday", "Monday", "Thursday", "Wednesday", "Thursday", "Friday", "Saturday"], WEEK_DAY_SHORT: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], MONTHS: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], MONTHS_SHORT: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEK_DAYS: [{ name: "Sunday", short: "Su", isWeekend: true }, { name: "Monday", short: "Mo" }, { name: "Tuesday", short: "Tu" }, { name: "Wednesday", short: "We" }, { name: "Thursday", short: "Th" }, { name: "Friday", short: "Fr" }, { name: "Saturday", short: "Sa", isWeekend: true }], YEARS_RANGE_START: B.getFullYear() - 100, YEARS_RANGE_END: B.getFullYear() + 100, getDay: (e2) => new Date(e2.year, e2.month, e2.day).getDay(), todayObject: () => {
  const e2 = /* @__PURE__ */ new Date();
  return { year: e2.getFullYear(), month: e2.getMonth(), day: e2.getDate() };
}, getDayOfMonth: (e2) => new Date(e2.year, e2.month, e2.day).getDate(), inputPlaceholder: "select", clockFromLB: "from", clockToLB: "to", nextMonthBtnTL: "next month", previousMonthBtnTL: "previous month", fromLB: "from", toLB: "to", clockLB: "clock", todayBtnTL: "Today" } }, j = "YEARS_VIEW", O = "MONTHS_VIEW", A = "DAYS_VIEW", $ = (e2) => E[e2], I = (e2, t2, n2) => "fa" === n2 ? g.jalaaliMonthLength(e2, t2 + 1) : new Date(e2, t2 + 1, 0).getDate(), R = (e2, t2) => {
  const n2 = "fa" === t2 ? 1 : 0, { WEEK_DAY_SHORT: a2 } = $(t2), r2 = a2[e2];
  return { weekDay: r2, weekDayIndex: a2.indexOf(r2) + n2 };
}, F = (e2, t2) => "fa" === t2 ? g.j2d(e2.year, e2.month + 1, e2.day) : new Date(e2.year, e2.month, e2.day).setHours(0, 0, 0, 0), _ = (e2, t2) => e2 && e2.year ? { ...e2, month: e2.month - 1 } : e2, W = (e2, t2) => {
  let n2;
  return e2 && ("single" === t2 && e2.year && (n2 = _(e2)), "range" === t2 && e2.from && !e2.to && (n2 = { from: { ..._(e2.from) }, to: null }), "range" === t2 && e2.from && e2.to && (n2 = { from: { ..._(e2.from) }, to: { ..._(e2.to) } }), "multi" === t2 && (n2 = e2.map((e3) => ({ ..._(e3) })))), n2;
}, V = r({}), Y = r(Function);
function J({ children: e2, initCalender: n2 }) {
  const [a2, r2] = t(n2);
  return m(V.Provider, { value: a2, children: m(Y.Provider, { value: r2, children: e2 }) });
}
function H() {
  return o(V);
}
function P() {
  const e2 = o(Y);
  return { changeCalender: (t2) => {
    e2((e3) => ({ ...e3, ...t2 }));
  } };
}
const G = r({}), K = r(Function);
function q({ children: e2 }) {
  const n2 = A, [a2, r2] = t(n2);
  return m(G.Provider, { value: a2, children: m(K.Provider, { value: r2, children: e2 }) });
}
function z() {
  return o(G);
}
function U() {
  const e2 = o(K);
  return { changeView: (t2) => {
    e2(t2);
  } };
}
const Z = r({}), X = r(Function);
function Q({ type: e2, children: n2, initState: a2 }) {
  let r2;
  "single" === e2 && (r2 = a2), "range" === e2 && (r2 = a2 || { from: null, to: null }), "multi" === e2 && (r2 = a2 || []);
  const [o2, i2] = t(r2);
  return m(Z.Provider, { value: o2, children: m(X.Provider, { value: i2, children: n2 }) });
}
function ee() {
  return o(Z);
}
function te() {
  const e2 = ee(), t2 = o(X);
  return { changeSelectedDay: (e3) => {
    t2((t3) => ({ ...t3, ...e3 }));
  }, changeSelectedDayRange: (e3, n2) => {
    t2((t3) => ({ ...t3, [e3]: n2 }));
  }, removeSelectedDay: () => {
    t2(null);
  }, changeSelectedDayMulti: (n2) => {
    e2.find((e3) => S(e3.year, e3.month, e3.day) === S(n2.year, n2.month, n2.day)) || t2((e3) => [...e3, n2]);
  }, removeSelectedDayMulti: (n2) => {
    t2(() => [...e2.filter((e3) => S(e3.year, e3.month, e3.day) !== S(n2.year, n2.month, n2.day))]);
  }, removeAllSelectedDayMulti: () => {
    t2(() => []);
  } };
}
const ne = r({}), ae = r(Function);
function re({ children: e2, initState: n2 }) {
  const [a2, r2] = t(n2);
  return m(ne.Provider, { value: a2, children: m(ae.Provider, { value: r2, children: e2 }) });
}
function oe() {
  return o(ne);
}
function ie() {
  const e2 = o(ae);
  return { changeSelectedTime: (t2) => {
    e2((e3) => ({ ...e3, ...t2 }));
  }, changeSelectedTimeRange: (t2, n2) => {
    e2((e3) => ({ ...e3, [t2]: n2 }));
  } };
}
const le = r({});
function se({ children: e2, initState: n2 }) {
  const [a2] = t(n2);
  return m(le.Provider, { value: a2, children: e2 });
}
function de() {
  return o(le);
}
const me = ({ onChange: e2, type: t2, withTime: r2, local: o2, showWeekend: i2, todayBtn: l2, NextBtnIcon: s2, PreviousBtnIcon: d2, clockFromLabel: h2, clockToLabel: u2, clockLabel: y2, timeClass: f2, nextMonthBtnTitle: g2, previousMonthBtnTitle: p2, headerClass: C2, daysClass: b2, monthsClass: D2, yearsClass: v2, disabledDates: w2, initCalender: S2, isComponentVisible: L2, yearListStyle: M2, handelComponentVisible: T2, autoClose: B2 }) => {
  const x2 = z(), E2 = ee(), $2 = n(E2), { changeCalender: I2 } = P(), R2 = oe();
  return N(() => {
    k(e2, t2, E2, R2, null, r2);
  }, [E2, R2]), a(() => {
    L2 && S2 && (!E2 || Array.isArray(E2) && !E2.length) && I2({ ...S2 });
  }, [L2]), a(() => {
    $2.current = E2;
  }, [E2]), a(() => () => {
    var _a;
    "single" === t2 && $2.current && I2({ year: $2.current.year, month: $2.current.month, day: $2.current.day }), "range" === t2 && $2.current.from && I2({ year: $2.current.from.year, month: $2.current.from.month, day: $2.current.from.day }), "multi" === t2 && ((_a = $2.current) == null ? void 0 : _a.length) && I2({ year: $2.current[0].year, month: $2.current[0].month, day: $2.current[0].day });
  }, []), c("div", { className: `dtWrapper ${"fa" === o2 ? "is-rtl" : "is-ltr"} ${"is_" + z()}`, dir: "fa" === o2 ? "rtl" : "ltr", children: [m(ge, { local: o2, NextBtnIcon: s2, PreviousBtnIcon: d2, nextMonthBtnTitle: g2, previousMonthBtnTitle: p2, headerClass: C2, handelComponentVisible: T2, autoClose: B2 }), j === x2 && m(pe, { local: o2, yearsClass: v2, yearListStyle: M2 }), O === x2 && m(Ce, { local: o2, monthsClass: D2 }), A === x2 && m(be, { type: t2, local: o2, showWeekend: i2, daysClass: b2, disabledDates: w2, handelComponentVisible: T2 }), z() === A && m(Se, { local: o2, todayBtn: l2 }), r2 && m(De, { clockFromLabel: h2, clockToLabel: u2, clockLabel: y2, timeClass: f2, type: t2, local: o2, currentView: x2 })] });
}, ce = (e2) => m("svg", { xmlns: "http://www.w3.org/2000/svg", xmlSpace: "preserve", fill: "currentColor", viewBox: "0 0 477.175 477.175", ...e2, children: m("path", { d: "m360.731 229.075-225.1-225.1c-5.3-5.3-13.8-5.3-19.1 0s-5.3 13.8 0 19.1l215.5 215.5-215.5 215.5c-5.3 5.3-5.3 13.8 0 19.1 2.6 2.6 6.1 4 9.5 4 3.4 0 6.9-1.3 9.5-4l225.1-225.1c5.3-5.2 5.3-13.8.1-19z" }) }), he = (e2) => m("svg", { xmlns: "http://www.w3.org/2000/svg", xmlSpace: "preserve", fill: "currentColor", viewBox: "0 0 477.175 477.175", ...e2, children: m("path", { d: "m145.188 238.575 215.5-215.5c5.3-5.3 5.3-13.8 0-19.1s-13.8-5.3-19.1 0l-225.1 225.1c-5.3 5.3-5.3 13.8 0 19.1l225.1 225c2.6 2.6 6.1 4 9.5 4s6.9-1.3 9.5-4c5.3-5.3 5.3-13.8 0-19.1l-215.4-215.5z" }) }), ue = (e2) => c("svg", { xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", xmlSpace: "preserve", viewBox: "0 0 32 32", ...e2, children: [m("use", { xlinkHref: "/assets/file.svg#img" }), m("path", { fill: "currentColor", d: "m17.459 16.014 8.239-8.194a.992.992 0 0 0 0-1.414 1.016 1.016 0 0 0-1.428 0l-8.232 8.187L7.73 6.284a1.009 1.009 0 0 0-1.428 0 1.015 1.015 0 0 0 0 1.432l8.302 8.303-8.332 8.286a.994.994 0 0 0 0 1.414 1.016 1.016 0 0 0 1.428 0l8.325-8.279 8.275 8.276a1.009 1.009 0 0 0 1.428 0 1.015 1.015 0 0 0 0-1.432l-8.269-8.27z" })] }), ye = (e2) => m("svg", { xmlns: "http://www.w3.org/2000/svg", width: 24, height: 24, ...e2, children: m("path", { d: "M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41Z" }) }), fe = (e2) => m("svg", { xmlns: "http://www.w3.org/2000/svg", width: 24, height: 24, ...e2, children: m("path", { d: "M7.41 8.58 12 13.17l4.59-4.59L18 10l-6 6-6-6 1.41-1.42Z" }) }), ge = e.memo(({ local: e2, NextBtnIcon: t2, PreviousBtnIcon: n2, nextMonthBtnTitle: a2, previousMonthBtnTitle: r2, headerClass: o2, autoClose: i2, handelComponentVisible: l2 }) => {
  const { minDate: s2, maxDate: d2 } = de(), { MONTHS: h2 } = $(e2), u2 = H(), y2 = z(), { changeCalender: f2 } = P(), { changeView: g2 } = U(), { year: p2, month: C2, hour: b2, minute: v2 } = u2, w2 = (e3) => {
    let t3 = C2 + ("inc" === e3 ? 1 : -1), n3 = p2;
    return t3 < 0 && (t3 = 11, n3 -= 1), t3 > 11 && (t3 = 0, n3 += 1), { year: n3, month: t3, day: 1, hour: b2, minutes: v2 };
  }, S2 = (e3) => {
    const t3 = w2(e3);
    f2({ ...t3 });
  }, L2 = (e3) => {
    g2(e3 === O && y2 === O || e3 === j && y2 === j ? A : e3);
  };
  return c("div", { className: `header ${o2}`, children: [m("a", { className: "header--btn " + ((() => {
    const e3 = w2("dec");
    return !s2 || !(s2.year > e3.year || s2.year === e3.year && s2.month > e3.month);
  })() ? "" : "is-disabled"), title: r2 || h2[C2 - 1 < 0 ? 11 : C2 - 1], onClick: () => S2("dec"), children: m(n2 || he, {}) }), c("div", { className: "header-date", children: [m("div", { className: "header-date--year", onClick: () => L2(j), children: "fa" === e2 ? D(p2) : p2 }), m("div", { className: "header-date--month", onClick: () => L2(O), children: h2[C2] })] }), m("a", { className: "header--btn " + ((() => {
    const e3 = w2("inc");
    return !d2 || !(d2.year < e3.year || d2.year === e3.year && d2.month < e3.month);
  })() ? "" : "is-disabled"), title: a2 || h2[C2 + 1 > 11 ? 0 : C2 + 1], onClick: () => S2("inc"), children: m(t2 || ce, {}) }), !i2 && l2 && m("a", { className: "header--clearBtn", onClick: () => l2(true), children: m(ue, {}) })] });
}), pe = ({ local: e2, yearsClass: t2, yearListStyle: r2 }) => {
  const { minDate: o2, maxDate: i2 } = de(), l2 = n(null), { YEARS_RANGE_START: s2, YEARS_RANGE_END: d2 } = $(e2), { changeView: c2 } = U(), { changeCalender: h2 } = P(), u2 = H();
  let { month: y2, day: f2, hour: g2, minute: p2 } = u2;
  const C2 = (e3) => {
    if (o2) for (; o2.year === e3 && o2.month > y2; ) y2++;
    if (i2) for (; i2.year === e3 && y2 > i2.month; ) y2--;
    h2({ ...{ year: e3, month: y2, day: f2, hour: g2, minutes: p2 } }), c2(O);
  }, b2 = () => {
    let e3 = d2;
    return i2 && (e3 = i2.year), e3;
  };
  return a(() => {
    l2.current && l2.current.scrollIntoView({ behavior: "smooth", block: "center", inline: "center" });
  }, []), m("div", { className: `yearWrapper ${t2} `, children: m("ul", { className: `yearGrid ${"fa" === e2 ? "is-rtl" : ""} ${"list" === r2 ? "is-year-list" : ""}`, children: (() => {
    const t3 = [];
    for (let n2 = (() => {
      let e3 = s2;
      return o2 && (e3 = o2.year), e3;
    })(); n2 <= b2(); n2++) t3.push(m("li", { ref: n2 === u2.year ? l2 : null, className: "yearGrid_year " + (n2 === u2.year ? "is-selectedYearRef" : ""), onClick: () => C2(n2), children: "fa" === e2 ? D(n2) : n2 }, n2));
    return t3;
  })() }) });
}, Ce = ({ local: e2, monthsClass: t2 }) => {
  const { minDate: n2, maxDate: a2 } = de(), { MONTHS: r2 } = $(e2), { changeView: o2 } = U(), { changeCalender: i2 } = P(), l2 = H(), { year: s2, month: d2, day: c2, hour: h2, minute: u2 } = l2, y2 = d2, f2 = (e3) => !!(n2 && n2.year === s2 && n2.month > e3) || !!(a2 && a2.year === s2 && a2.month < e3);
  return m("div", { children: m("ul", { className: `monthList ${"fa" === e2 ? "is-rtl" : ""} ${t2}`, children: r2.map((e3, t3) => m("div", { className: `monthList_month ${f2(t3) ? "is-disabled" : ""}
            ${t3 === y2 ? "is-selected-month" : ""}`, onClick: () => (i2({ year: s2, month: t3, day: c2, hour: h2, minutes: u2 }), void o2(A)), children: e3 }, t3)) }) });
}, be = e.memo(({ type: e2, local: t2, showWeekend: n2, daysClass: a2, disabledDates: r2, handelComponentVisible: o2 }) => {
  const { minDate: l2, maxDate: s2 } = de(), { todayObject: d2, getDay: h2, WEEK_DAYS: u2 } = $(t2), y2 = F({ ...d2() }, t2), f2 = H(), g2 = f2.year, p2 = f2.month, C2 = ee(), { changeSelectedDay: b2, changeSelectedDayRange: v2, removeSelectedDay: w2, changeSelectedDayMulti: L2, removeSelectedDayMulti: M2 } = te();
  let k2, T2;
  "range" === e2 && C2.from && (k2 = F(C2.from, t2)), "range" === e2 && C2.to && (T2 = F(C2.to, t2));
  const N2 = i(() => {
    return e3 = g2, n3 = p2, Array(I(e3, n3, t2)).fill(void 0).map((a3, r3) => {
      const o3 = /* @__PURE__ */ ((e4, t3, n4) => ({ year: e4, month: t3, day: n4 }))(e3, n3, r3 + 1);
      return { date: o3, timeStamp: F(o3, t2), dayOfMonth: r3 + 1, isCurrentMonth: true };
    });
    var e3, n3;
  }, [g2, p2]), B2 = i(() => ((e3, n3) => {
    const a3 = { year: N2[0].date.year, month: N2[0].date.month, day: N2[0].date.day }, r3 = R(h2(a3), t2), o3 = r3.weekDayIndex ? r3.weekDayIndex : 7, i2 = I(e3, n3 - 1, t2) - o3;
    return Array(o3).fill(void 0).map((a4, r4) => {
      const o4 = { year: e3, month: n3, day: r4 };
      return { date: o4, timeStamp: F(o4, t2), dayOfMonth: i2 + r4 + 1, isCurrentMonth: false };
    });
  })(g2, p2), [g2, p2]), x2 = i(() => ((e3, n3) => {
    const a3 = R(h2({ year: e3, month: n3, day: N2.length }), t2), r3 = 7 === a3.weekDayIndex ? 6 : 7 - a3.weekDayIndex - 1;
    return Array(r3).fill(void 0).map((a4, r4) => {
      const o3 = { year: e3, month: n3, day: r4 };
      return { date: o3, timeStamp: F(o3, t2), dayOfMonth: r4 + 1, isCurrentMonth: false };
    });
  })(g2, p2), [g2, p2]), E2 = (a3, o3) => {
    let i2 = "";
    return a3.timeStamp === y2 && (i2 += " is-today"), "single" === e2 && a3.timeStamp === F({ ...C2 }, t2) && (i2 += " is-selected-day"), "range" === e2 && C2.from && a3.timeStamp === F({ ...C2.from }, t2) && (i2 += " is-selected-day-from"), "range" === e2 && (C2 == null ? void 0 : C2.to) && a3.timeStamp === F({ ...C2.to }, t2) && (i2 += " is-selected-day-to"), "range" === e2 && C2 && k2 < a3.timeStamp && a3.timeStamp < T2 && (i2 += " is-selected-day-range"), "multi" === e2 && C2.find((e3) => F(e3, t2) === a3.timeStamp) && (i2 += " is-selected-day"), n2 && ("fa" === t2 && (o3 + B2.length) % 7 == 6 || "en" === t2 && (o3 + B2.length) % 7 == 0) && (i2 += " is_weekends"), l2 && l2.year === a3.date.year && l2.month === a3.date.month && l2.day > a3.date.day && (i2 += " is-minMaxDisabled"), s2 && s2.year === a3.date.year && s2.month === a3.date.month && s2.day < a3.date.day && (i2 += " is-minMaxDisabled"), (r2 == null ? void 0 : r2.find((e3) => F({ year: e3.year, month: e3.month, day: e3.day }, t2) === a3.timeStamp)) && (i2 += " is-disabled-by-user"), i2;
  };
  return c("ul", { className: `daysList ${"fa" === t2 ? "is-rtl" : ""} ${a2}`, children: [u2.map((e3) => m("li", { className: "daysList-day is-week-days", children: e3.short }, e3.name)), B2.length < 7 && B2.map((e3, n3) => m("li", { className: "daysList-day is-disabled is-prev-month " + (B2.length - 1 === n3 ? "is-border-right-0" : ""), children: "fa" === t2 ? D(e3.dayOfMonth) : e3.dayOfMonth }, e3.dayOfMonth)), N2.map((n3, a3) => m("li", { className: `daysList-day is-pointer ${E2(n3, a3)}`, onClick: () => {
    ((n4) => {
      var _a, _b, _c;
      const a4 = { ...n4 }, r3 = F(a4, t2);
      if ("single" === e2 && (C2 && S(a4.year, a4.month, a4.day) === S(C2.year, C2.month, C2.day) ? w2() : (b2(a4), o2 && o2())), "range" === e2 && C2) if ((_a = C2.from) == null ? void 0 : _a.year) if (!((_b = C2.to) == null ? void 0 : _b.year) && k2 <= r3) v2("to", a4), o2 && o2();
      else if (!((_c = C2.to) == null ? void 0 : _c.year) && k2 > r3) {
        const e3 = C2.from;
        v2("from", a4), v2("to", e3), o2 && o2();
      } else C2.from && C2.to && (v2("from", a4), v2("to", null));
      else v2("from", a4);
      "multi" === e2 && (C2.find((e3) => S(e3.year, e3.month, e3.day) === S(a4.year, a4.month, a4.day)) ? M2(a4) : L2(a4));
    })(n3.date);
  }, children: "fa" === t2 ? D(n3.dayOfMonth) : n3.dayOfMonth }, n3.dayOfMonth)), x2.length < 7 && x2.map((e3, n3) => m("li", { className: "daysList-day is-disabled is-next-month " + (0 === n3 ? "is-border-left-0" : ""), children: "fa" === t2 ? D(e3.dayOfMonth) : e3.dayOfMonth }, e3.dayOfMonth))] });
}), De = e.memo(({ type: e2, clockFromLabel: t2, clockToLabel: n2, clockLabel: a2, timeClass: r2, local: o2, currentView: i2 }) => {
  var _a, _b, _c, _d;
  const l2 = oe(), { clockFromLB: s2, clockToLB: d2, clockLB: h2 } = $(o2);
  return c("div", { children: ["single" === e2 && i2 === A && m(ve, { timeFor: "single", initHour: l2 == null ? void 0 : l2.hour, initMinute: l2 == null ? void 0 : l2.minute, timeLabel: a2 || h2, timeClass: r2 }), "range" === e2 && i2 === A && c("div", { style: { display: "flex", justifyContent: "center" }, children: [m(ve, { timeFor: "from", initHour: (_a = l2.from) == null ? void 0 : _a.hour, initMinute: (_b = l2.from) == null ? void 0 : _b.minute, timeLabel: t2 || s2, timeClass: r2 }), m(ve, { timeFor: "to", initHour: (_c = l2.to) == null ? void 0 : _c.hour, initMinute: (_d = l2.to) == null ? void 0 : _d.minute, timeLabel: n2 || d2, timeClass: r2 })] })] });
}), ve = ({ timeFor: e2, initHour: n2, initMinute: a2, timeLabel: r2, timeClass: o2 }) => {
  const i2 = /* @__PURE__ */ new Date(), l2 = ee(), { changeSelectedTime: s2, changeSelectedTimeRange: d2 } = ie(), [u2, y2] = t(b(n2, i2.getHours())), [f2, g2] = t(b(a2, i2.getMinutes())), p2 = () => {
    let t2 = false;
    return "from" === e2 ? t2 = !l2.from : "to" === e2 ? t2 = !l2.to : "single" === e2 && (t2 = !l2 || void 0 === l2), t2;
  }, C2 = (e3) => {
    e3 > 23 && (e3 = 0), e3 < 0 && (e3 = 23), y2(e3);
  }, D2 = (e3) => {
    e3 > 59 && (e3 = 0), e3 < 0 && (e3 = 59), g2(e3);
  };
  return N(() => {
    "from" === e2 ? d2("from", { hour: u2, minute: f2 }) : "to" === e2 ? d2("to", { hour: u2, minute: f2 }) : "single" === e2 && s2({ hour: u2, minute: f2 });
  }, [u2, f2]), c("div", { dir: "ltr", className: `time ${o2}`, children: [m("span", { className: "time--title", children: r2 }), c("div", { className: "field-wrapper", children: [c("fieldset", { className: "time-fieldset " + (p2() ? "is-disabled" : ""), children: [m("button", { type: "button", className: "time-fieldset--dec", onClick: () => C2(u2 - 1), children: m(fe, {}) }), m("input", { className: "time--input", value: h(u2).toString().slice(-2), type: "number", max: "23", min: "0", onChange: (e3) => C2(Number(e3.target.value)), disabled: p2() }), m("button", { type: "button", className: "time-fieldset--inc", onClick: () => C2(u2 + 1), children: m(ye, {}) })] }), ":", c("fieldset", { className: "time-fieldset " + (p2() ? "is-disabled" : ""), children: [m("button", { type: "button", title: "Down", className: "time-fieldset--dec", onClick: () => D2(f2 - 1), children: m(fe, {}) }), m("input", { className: "time--input", value: h(f2).toString().slice(-2), type: "number", max: "59", min: "0", onChange: (e3) => D2(Number(e3.target.value)), disabled: p2() }), m("button", { type: "button", title: "Up", className: "time-fieldset--inc", onClick: () => D2(f2 + 1), children: m(ye, {}) })] })] })] });
}, we = l(({ placeholder: e2, type: t2, local: n2, handelComponentVisible: a2, clearBtn: r2, withTime: o2, onChange: i2, isDisabled: l2, isRequired: s2, fromLabel: d2, inputId: h2, toLabel: u2, inputClass: y2, clearBtnClass: f2, maxDate: g2, showTimeInput: p2 }, C2) => {
  const { inputPlaceholder: b2, fromLB: D2, toLB: v2, todayObject: w2 } = $(n2), { changeCalender: S2 } = P(), M2 = ee(), T2 = oe(), { removeSelectedDay: N2, changeSelectedDayRange: B2, removeAllSelectedDayMulti: x2 } = te();
  return c("div", { className: "input-picker", children: [m("input", { ref: C2, className: `input-picker--input ${y2}`, readOnly: true, placeholder: e2 || b2, value: (() => {
    if ("single" === t2) return L(M2, true, o2, p2, T2);
    if ("range" === t2 && M2.from && M2.to) return `${d2 || D2} : ${L(M2.from, true, o2, p2, T2.from)}    ${u2 || v2} : ${L(M2.to, true, o2, p2, T2.to)}`;
    if ("multi" === t2) {
      return M2.map((e3) => L(e3, true)).join(" , ");
    }
    return "";
  })(), onClick: () => a2(true), onKeyDown: (e3) => {
    "Space" === e3.code && a2(true);
  }, disabled: l2, required: s2, id: h2 }), r2 && m("a", { className: `input-picker--clearBtn ${f2}`, onClick: () => (() => {
    if ("single" === t2 ? (N2(), k(i2, t2, null, T2, o2)) : "range" === t2 ? (B2("from", null), B2("to", null), k(i2, t2, { from: null, to: null }, T2, o2)) : "multi" === t2 && (x2(), k(i2, t2, [], T2, o2)), g2) S2({ year: g2 == null ? void 0 : g2.year, month: g2 == null ? void 0 : g2.month, day: g2 == null ? void 0 : g2.day });
    else {
      const e3 = w2();
      S2({ year: e3.year, month: e3.month, day: e3.day });
    }
  })(), children: m(ue, {}) })] });
}), Se = e.memo(({ local: e2, todayBtn: t2 }) => {
  const { todayObject: n2, todayBtnTL: a2 } = $(e2), { changeCalender: r2 } = P(), { minDate: o2, maxDate: i2 } = de(), l2 = n2();
  return m(s, { children: (() => {
    const n3 = { en: v, fa: w };
    return !!t2 && ((!i2 || 2 !== n3[e2](i2, l2)) && (!o2 || 1 !== n3[e2](o2, l2)));
  })() && m("a", { className: "todayBtn", onClick: () => {
    r2({ ...l2 });
  }, children: a2 }) });
}), Le = e.memo(({ initValue: e2, onCalenderChange: n2, onChange: r2, type: o2, withTime: l2, local: s2, showWeekend: d2, todayBtn: c2, maxDate: h2, minDate: u2, NextBtnIcon: y2, PreviousBtnIcon: f2, clockFromLabel: g2, clockToLabel: p2, clockLabel: C2, nextMonthBtnTitle: b2, previousMonthBtnTitle: D2, calenderModalClass: v2, headerClass: w2, daysClass: S2, timeClass: L2, monthsClass: N2, yearsClass: B2, disabledDates: x2, yearListStyle: E2 }) => {
  const [j2, O2] = t(null), [A2, $2] = t(0), I2 = { minDate: _(u2), maxDate: _(h2) };
  let R2;
  (x2 == null ? void 0 : x2.length) && (R2 = x2 == null ? void 0 : x2.map((e3) => _(e3)));
  const F2 = o2 ? o2.toLocaleLowerCase() : "single", V2 = s2 ? s2.toLocaleLowerCase() : "en", [Y2, H2] = t(W(e2, F2)), { initCalender: P2, initTime: G2 } = i(() => T(W(e2, F2), F2, V2, _(h2), _(u2)), [e2, h2, u2]);
  return M(e2, V2, F2, h2, u2, x2), a(() => {
    "single" !== F2 && "multi" !== F2 || (e2 && JSON.stringify(j2) !== JSON.stringify(e2) || !e2) && (O2(e2), H2(W(e2, F2)), $2(A2 + 1)), "range" === F2 && (e2 && e2.from && e2.to && JSON.stringify(j2) !== JSON.stringify(e2) || !e2) && (O2(e2), H2(W(e2, F2)), $2(A2 + 1));
  }, [e2]), a(() => {
    0 === A2 ? k(r2, F2, Y2, G2) : k(r2, F2, Y2, G2, n2);
  }, [Y2]), m("div", { className: "react-calendar-datetime-picker " + ("fa" === s2 ? "is-jalali" : ""), children: m(q, { children: m(J, { initCalender: P2, type: F2, children: m(se, { initState: I2, children: m(Q, { initState: Y2, type: F2, children: m(re, { initState: G2, type: F2, children: m("div", { className: `calender-modal  is-calender ${v2}`, children: m(me, { onChange: r2, type: F2, withTime: l2, local: V2, showWeekend: !!d2, todayBtn: !!c2, NextBtnIcon: y2, PreviousBtnIcon: f2, clockFromLabel: g2, clockToLabel: p2, clockLabel: C2, nextMonthBtnTitle: b2, previousMonthBtnTitle: D2, headerClass: w2, daysClass: S2, timeClass: L2, monthsClass: N2, yearsClass: B2, disabledDates: R2, yearListStyle: E2 }) }) }) }) }) }) }) }, A2);
}), Me = e.memo(({ initValue: e2, onChange: r2, type: o2, withTime: l2, showTimeInput: s2, local: h2, showWeekend: u2, clearBtn: y2, isRequired: f2, todayBtn: g2, onCalenderChange: p2, onCalenderHide: C2, onCalenderShow: b2, isDisabled: D2, maxDate: v2, minDate: w2, placeholder: S2, NextBtnIcon: L2, PreviousBtnIcon: N2, fromLabel: B2, toLabel: x2, clockFromLabel: E2, clockToLabel: j2, clockLabel: O2, nextMonthBtnTitle: A2, previousMonthBtnTitle: $2, inputClass: I2, clearBtnClass: R2, calenderModalClass: F2, headerClass: V2, daysClass: Y2, timeClass: H2, monthsClass: P2, yearsClass: G2, disabledDates: K2, yearListStyle: z2, autoClose: U2 = true, inputId: Z2 }) => {
  const [X2, ee2] = t(null), [te2, ne2] = t(0), ae2 = n(null), oe2 = { minDate: _(w2), maxDate: _(v2) };
  let ie2;
  (K2 == null ? void 0 : K2.length) && (ie2 = K2 == null ? void 0 : K2.map((e3) => _(e3)));
  const le2 = o2 ? o2.toLocaleLowerCase() : "single", de2 = h2 ? h2.toLocaleLowerCase() : "en", [ce2, he2] = t(W(e2, le2)), { initCalender: ue2, initTime: ye2 } = i(() => T(W(e2, le2), le2, de2, _(v2), _(w2)), [e2, v2, w2]), { ref: fe2, isComponentVisible: ge2, setIsComponentVisible: pe2 } = ((e3, r3, o3) => {
    const [i2, l3] = t(e3), s3 = n(null), d2 = (e4) => {
      "Escape" === e4.key && l3(false);
    }, m2 = (e4) => {
      s3.current && !s3.current.contains(e4.target) && e4.target !== o3.current && (l3(false), r3 && r3());
    };
    return a(() => (document.addEventListener("keydown", d2, true), document.addEventListener("click", m2, true), () => {
      document.removeEventListener("keydown", d2, true), document.removeEventListener("click", m2, true);
    })), { ref: s3, isComponentVisible: i2, setIsComponentVisible: l3 };
  })(false, C2, ae2), Ce2 = (e3) => {
    (e3 || U2 || !ge2) && (!ge2 && b2 && b2(), ge2 && C2 && C2(), e3 ? pe2(!ge2) : setTimeout(() => {
      pe2(!ge2);
    }, 300));
  };
  return d(() => {
    if (!ge2) return;
    const e3 = fe2.current, t2 = ae2.current;
    if (e3) {
      const { clientWidth: n2, clientHeight: a2 } = document.documentElement, { left: r3, width: o3, height: i2, top: l3 } = e3.getBoundingClientRect(), s3 = l3 + i2 > a2;
      if (o3 + r3 > n2 && (e3.style.left = -(r3 + o3 + 10 - n2) + "px"), s3) if (t2) {
        const { height: n3 } = t2.getBoundingClientRect();
        e3.style.bottom = n3 + "px";
      } else e3.style.bottom = "0px";
    }
  }, [ge2]), M(e2, de2, le2, v2, w2, K2), a(() => {
    "single" !== le2 && "multi" !== le2 || (e2 && JSON.stringify(X2) !== JSON.stringify(e2) || !e2) && (ee2(e2), he2(W(e2, le2)), ne2(te2 + 1)), "range" === le2 && (e2 && e2.from && e2.to && JSON.stringify(X2) !== JSON.stringify(e2) || !e2) && (ee2(e2), he2(W(e2, le2)), ne2(te2 + 1));
  }, [e2]), a(() => {
    0 === te2 ? k(r2, le2, ce2, ye2) : k(r2, le2, ce2, ye2, p2);
  }, [ce2]), m("div", { className: "react-calendar-datetime-picker " + ("fa" === h2 ? "is-jalali" : ""), children: m(q, { children: m(J, { initCalender: ue2, type: le2, children: m(se, { initState: oe2, children: m(Q, { initState: ce2, type: le2, children: c(re, { initState: ye2, type: le2, children: [m(we, { ref: ae2, placeholder: S2, clearBtn: y2, inputId: Z2, type: le2, local: de2, handelComponentVisible: Ce2, onChange: r2, withTime: l2, isDisabled: D2, isRequired: !!f2, fromLabel: B2, toLabel: x2, inputClass: I2, clearBtnClass: R2, maxDate: v2, showTimeInput: s2 }), ge2 && m("div", { ref: fe2, className: `calender-modal ${F2}`, children: m(me, { onChange: r2, type: le2, withTime: l2, local: de2, showWeekend: !!u2, todayBtn: !!g2, NextBtnIcon: L2, PreviousBtnIcon: N2, clockFromLabel: E2, clockToLabel: j2, clockLabel: O2, nextMonthBtnTitle: A2, previousMonthBtnTitle: $2, headerClass: V2, daysClass: Y2, timeClass: H2, monthsClass: P2, yearsClass: G2, disabledDates: ie2, initCalender: ue2, isComponentVisible: ge2, yearListStyle: z2, handelComponentVisible: Ce2, autoClose: U2 }) })] }) }) }) }) }) }, te2);
});
export {
  Le as DtCalendar,
  Me as DtPicker,
  p as convertToEn,
  C as convertToFa
};
